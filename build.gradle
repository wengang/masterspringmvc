buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
//		mavenCentral()
        maven { url 'http://maven.aliyun.com/mvn/repository/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
//	mavenCentral()
    maven { url 'http://maven.aliyun.com/mvn/repository/' }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.session:spring-session:1.3.1.RELEASE')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')
    compile('org.webjars:materializecss:0.100.2')
    compile('org.webjars:jquery:3.2.1')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')
    testCompile('org.fluentlenium:fluentlenium-assertj:3.3.0')
    testCompile('com.codeborne:phantomjsdriver:1.4.3')
    testCompile('org.seleniumhq.selenium:selenium-java:3.5.3')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}
//configurations {
//    integrationTestCompile.extendsFrom(testCompile)
//    integrationTestRuntime.extendsFrom(testRuntime)
//}
//sourceSets {
//    integrationTest {
//        compileClasspath += main.output + test.output
//        runtimeClasspath += main.output + test.output
//    }
//}
//task integrationTest(type: Test) {
//    testClassesDirs = sourceSets.integrationTest.output.classesDirs
//    classpath = sourceSets.integrationTest.runtimeClasspath
//    reports.html.setDestination(file("${reporting.baseDir}/integrationTests"))
//}
//
//
//allprojects {
//
//    gradle.projectsEvaluated {
//
//        tasks.withType(JavaCompile) {
//
//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//
//        }
//
//    }
//
//}